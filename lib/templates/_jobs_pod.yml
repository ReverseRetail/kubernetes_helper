  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: &job_app_name <%= locals[:job_app][:name] %>
    spec:
      replicas: 1
      selector:
        matchLabels:
          name: *job_app_name
      strategy:
        <% if locals[:job_app][:rolling_update] %>
        type: RollingUpdate
        rollingUpdate:
          maxSurge: 1
          maxUnavailable: 0
        <% else %>
        type: Recreate
        <% end %>
      minReadySeconds: 10
      template:
        metadata:
          labels:
            name: *job_app_name
        spec:
          <<: *template_spec
          containers:
            - <<: *app_container
              name: *job_app_name
              <% if locals[:job_app][:command] %>
              command: [ "/bin/bash", "-c", "<%= locals[:job_app][:command] %>" ]
              <% end %>
              <% if locals[:job_app][:resources] %>
              <%= include_template "_resources.yml", locals[:job_app][:resources] %>
              <% end %>
            <%= include_template "_container_extra_settings.yml", { pod: 'job', pod_name: locals[:job_app][:name] } %>

            <% if locals[:job_app][:sidekiq_alive_gem] %>
            <%= include_template "_sidekiq_alive_gem.yml" %>
            <% else %>
            <%= include_template "_job_liveness.yml", { services: locals[:job_app][:services] } %>
            <% end %>

            <% if deployment.cloud_secret_name %>
            - *cloudsql_container
            <% end %>

            <% if deployment.log_container %>
            - <<: *logs_container
            <% end %>

          <%= include_template "_custom_containers.yml", { pod: 'job', pod_name: locals[:job_app][:name] } %>

          volumes:
            <%= include_template "_volumes.yml", { pod: 'job', pod_name: locals[:job_app][:name] } %>